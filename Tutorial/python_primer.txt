R-1.2 Write a short Python function, is_even(k), that takes an integer value and returns
True if k is even, and False otherwise. However, your function cannot use the multiplication,
modulo, or division operators.

R-1.3 Write a short Python function, minmax(data), that takes a sequence of one or more numbers,
and returns the smallest and largest numbers, in the form of a tuple of length two. Do not use
the built-in functions min or max in implementing your solution.

R-1.4 Write a short Python function that takes a positive integer n and returns the sum of the
squares of all the positive integers smaller than n.

P-1.30 Write a Python program that can take a positive integer greater than 2 as input and write
out the number of times one must repeatedly divide this number by 2 before getting a value less
than 2.

P-1.35 The birthday paradox says that the probability that two people in a room will have the same
birthday is more than half, provided n, the number of people in the room, is more than 23. This
property is not really a paradox, but many people find it surprising. Design a Python program that
can test this paradox by a series of experiments on randomly generated birthdays, which test this
paradox for n = 5,10,15,20,...,100.

P-1.36 Write a Python program that inputs a list of words, separated by whitespace, and outputs
how many times each word appears in the list. You need not worry about efficiency at this point,
however, as this topic is something that will be addressed later in this book.

